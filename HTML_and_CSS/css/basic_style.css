body {
    background-color: #fff; /* hexidecimal*/
}

h1 {
    color: rgba(8, 141, 165, 1);
    margin-left: 100px ;
    text-shadow: 1px .5px 4px rgba(0,0,0, .06);
}

.container { /*this is the container of the 4 boxes*/
    width: 450px; 
    height: 450px;
    background-color: #faebd7;
    border: 2px solid black;
    border-radius: 5%; /*-- by only having one, CSS knows it is applied to all four corners */
}

/*------------------------------------------------------
    SELECT ALL SQUARES IN THE ARRAY
------------------------------------------------------*/
.container .squares:nth-child(-n+4) {
    /* url is the same as href in html */
    background-image: url("../images/icons/icons2.png");
    color: #fff;
    /* float left is used to put them in a row instead of a column*/
    float: left;
    width: 100px;
    height: 100px;
    margin: 5px;
    border: 1px solid black;
    border-radius: 25%;
    cursor: crosshair;
    /* property and duration are both reequired when using transistion
    they are listed below to show how transition can include all three */
    /*transition-property: ; 
    transition-duration: ;
    transition-delay: ;*/ 
    transition: transform .5s ease-in-out; 
}

/*------------------------------------------------------
    SELECT ALL SQUARES PARAGRAPHS IN THE ARRAY
------------------------------------------------------*/

/*the reason only squares is targeted is because we are targeting the 'p'
    which is inside the square, not the container */
.squares:nth-child(-n+4) p{
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 0.5cm;
    font-weight: 900;
    text-align: center;
    margin: 0;
    text-shadow: 2px 1px 4px rgba(0,0,0, .08);
}

/*------------------------------------------------------
    INDIVDUALLY SELECT SQUARES A SQUARE IN THE ARRAY
------------------------------------------------------*/

.squares:nth-child(1) {
    background: #4240ff;
}

.squares:nth-child(2) {
    background: #ab3fdd;

}
.squares:nth-child(3) {
    background: #ae163e;

}
.squares:nth-child(4) {
    background: #00b200;
}

/*------------------------------------------------------
    HOVER EFFECTS
------------------------------------------------------*/
.container .squares:nth-child(-n+4):hover {
    background-image: url("../images/icons/icon1.png");
    transform: scale(.5); /* .5 meaning half the size */
    animation: race;
    animation-duration: 2.5s;
    animation-iteration-count: infinite;
    animation-timing-function: cubic-bezier(2.5,.2,.3,2);
}

.squares:nth-child(1):hover {
    background: #13b4ff;
}

.squares:nth-child(2):hover {
    background: #d861af;
}

.squares:nth-child(3):hover {
    background: #81205f;
}

.squares:nth-child(4):hover {
    background: #77b800;
}

/*------------------------------------------------------
    ANNIMATION EFFECTS
------------------------------------------------------*/
/* 'race' is called in the hover effects section and here is where
we define what race does */

/* two states are required of a keyframe, a beginning and an end */
/* in the case below, the beginning state is 0%, it then goes to what
is defined by 50% and then goes to what is defined at 100% */
@keyframes race {
    0%, 100% {
        /* translate means move. in this case we are moving from 0 to
        330px on the y axis(up and down) */
        transform: translateY(0px);
        background-image: url("../images/icons/icon1.png");
    }
    50% {
        transform: translateY(330px);
    }
}
https://www.learncodinganywhere.com/Student/PageView/ViewPage?courseId=101&pageNumber=335
